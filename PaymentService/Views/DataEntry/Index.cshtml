@model PaymentService.Models.transactions

@{
    ViewBag.Title = "Silent Post - Payment Method";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    body {
        font-family: Arial;
        font-size: 17px;
        padding: 8px;
    }

    * {
        box-sizing: border-box;
    }

    .row {
        display: -ms-flexbox; /* IE10 */
        display: flex;
        -ms-flex-wrap: wrap; /* IE10 */
        flex-wrap: wrap;
        margin: 0 -16px;
    }

    .col-25 {
        -ms-flex: 25%; /* IE10 */
        flex: 25%;
    }

    .col-50 {
        -ms-flex: 50%; /* IE10 */
        flex: 50%;
    }

    .col-75 {
        -ms-flex: 75%; /* IE10 */
        flex: 75%;
    }

    .col-25,
    .col-50,
    .col-75 {
        padding: 0 16px;
    }

    .container-l {
        background-color: white;
        padding: 5px 20px 15px 20px;
        border: 1px solid lightgrey;
        border-radius: 3px;
    }

    input[type=text] {
        width: 100%;
        margin-bottom: 20px;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    label {
        margin-bottom: 10px;
        display: block;
    }

    .icon-container {
        margin-bottom: 20px;
        padding: 7px 0;
        font-size: 14px;
    }

    .btn {
        background-color: #04AA6D;
        color: white;
        padding: 12px;
        margin: 10px 0;
        border: none;
        width: 100%;
        border-radius: 3px;
        cursor: pointer;
        font-size: 17px;
    }

        .btn:hover {
            background-color: #45a049;
        }

    a {
        color: #2196F3;
    }

    hr {
        border: 1px solid lightgrey;
    }

    span.price {
        float: right;
        color: grey;
    }

    /* Responsive layout - when the screen is less than 800px wide, make the two columns stack on top of each other instead of next to each other (also change the direction - make the "cart" column go on top) */
    @@media (max-width: 800px) {
        .row {
            flex-direction: column-reverse;
        }

        .col-25 {
            margin-bottom: 20px;
        }
    }
</style>




<script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<!--include jQuery -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"
        type="text/javascript"></script>
<!--include jQuery Validation Plugin-->
<script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.12.0/jquery.validate.min.js"
        type="text/javascript"></script>
<script type="text/javascript">
    function CheckData() {
        var txtCardHolderName = $('#card_holder_name');
        var txtCardNumber = $('#card_number').val();
        var txtcvv = $('#cvv').val();
        var txtexp_month = $('#expdate_month').val();
        var txtexp_year = $('#expdate_year').val();
        if (txtCardNumber == "") {
            return;
        }
        else if (txtcvv == "") {
            return;
        }
        else if (txtexp_month == "") {
            return;
        }
        else if (txtexp_year == "") {
            return;
        }
        else if (txtCardHolderName == "") {
            return;
        }
        else {
            var key = CryptoJS.enc.Utf8.parse('8080808080808080');
            var iv = CryptoJS.enc.Utf8.parse('8080808080808080');
            var encrypted_cardholder_name = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtCardHolderName), key,
                { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            var encrypted_cardnumber = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtCardNumber), key,
                { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            $('#card_number').val(encrypted_cardnumber);
            var encrypted_cvv = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtcvv), key,
                { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            $('#cvv').val(encrypted_cvv);
            var encrypted_expmonth = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtexp_month), key,
                { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            $('#expdate_month').val(encrypted_expmonth);
            var encrypted_expyear = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtexp_year), key,
                { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            $('#expdate_year').val(encrypted_expyear);
        }
    }
</script>
<legend>Silent Post Payment Method</legend>

<style>
    * {
        text-align: center;
    }
</style>
<!DOCTYPE html>
<html>
<body>



    @using (Html.BeginForm("Index", "DataEntry", FormMethod.Post))
    {
        if (TempData["notice"] != null)
        {
            <p>@TempData["notice"]</p>
        }

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <fieldset>
            <legend> Silent Post Payment </legend>
            <div class="container">
                <div style=" display: flex; flex-direction: row; align-content: space-between; justify-content: center; align-items: stretch; margin: 10px; flex-wrap: nowrap; }">
                    <label style="padding:15px;">
                        @Html.RadioButtonFor(m => m.TransType, "0")
                        @Html.LabelFor(i => i.TransType, "Debit Transaction")
                    </label>
                    <label style="padding:15px;">

                        @Html.RadioButtonFor(m => m.TransType, "1")

                        @Html.LabelFor(i => i.TransType, "Authorization only (J5)")
                    </label>
                    <label style="padding:15px;">
                        @Html.RadioButtonFor(m => m.TransType, "2")
                        @Html.LabelFor(i => i.TransType, "Capture (J4)")
                    </label>
                    <label style="padding:15px;">
                        @Html.RadioButtonFor(m => m.TransType, "3")
                        @Html.LabelFor(i => i.TransType, "Charge")
                    </label>
                    <label style="padding:15px;">
                        @Html.RadioButtonFor(m => m.TransType, "4")
                        @Html.LabelFor(i => i.TransType, "Refund")
                    </label>
                </div>
            </div>

            <div class="row">
                <div class="col-75">
                    <div class="editor-label">
                        <label>Customer Name</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.card_holder_name, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required"
                            }
                        })
                        @Html.HiddenFor(model => model.card_holder_name)
                        @Html.ValidationMessageFor(model => model.card_holder_name)
                    </div>
                    <div class="editor-label">
                        <label>Card Number</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.card_number, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required",
                                @maxlength = "16"
                            }
                        })
                        @Html.HiddenFor(model => model.card_number)
                        @Html.ValidationMessageFor(model => model.card_number)
                    </div>

                    <div class="editor-label">
                        <label>Exp Month</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.expdate_month, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required",
                                @maxlength = "2"
                            }
                        })
                        @Html.HiddenFor(model => model.expdate_month)
                        @Html.ValidationMessageFor(model => model.expdate_month)
                    </div>

                    <div class="editor-label">
                        <label>Exp Year</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.expdate_year, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required",
                                @maxlength = "4",
                                @minlength = "4"
                            }
                        })
                        @Html.HiddenFor(model => model.expdate_year)
                        @Html.ValidationMessageFor(model => model.expdate_year)
                    </div>

                    <div class="editor-label">
                        <label>CVV</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.cvv, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required",
                                @maxlength = "3",
                                @minlength = "3"
                            }
                        })
                        @Html.HiddenFor(model => model.cvv)
                        @Html.ValidationMessageFor(model => model.cvv)
                    </div>

                    <div class="editor-label">
                        <label>Amount</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.amount, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required",
                                @maxlength = "5",
                                @minlength = "1"
                            }
                        })
                        @Html.HiddenFor(model => model.amount)
                        @Html.ValidationMessageFor(model => model.amount)
                    </div>
                </div>

                <div class="col-50">
                    <div class="editor-label">
                        <label>Email</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.email, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required"
                            }
                        })
                        @Html.HiddenFor(model => model.email)
                        @Html.ValidationMessageFor(model => model.email)
                    </div>

                    <div class="editor-label">
                        <label>City</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.city, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required"
                            }
                        })
                        @Html.HiddenFor(model => model.city)
                        @Html.ValidationMessageFor(model => model.city)
                    </div>

                    <div class="editor-label">
                        <label>Address</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.address, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required"
                            }
                        })
                        @Html.HiddenFor(model => model.address)
                        @Html.ValidationMessageFor(model => model.address)
                    </div>

                    <div class="editor-label">
                        <label>ZIP</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.zip, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required"
                            }
                        })
                        @Html.HiddenFor(model => model.zip)
                        @Html.ValidationMessageFor(model => model.zip)
                    </div>


                    <div class="editor-label">
                        <label>Phone Number</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.phone, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required"
                            }
                        })
                        @Html.HiddenFor(model => model.phone)
                        @Html.ValidationMessageFor(model => model.phone)
                    </div>

                    <div class="editor-label">
                        <label>Country</label>
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.country, new
                        {
                            htmlAttributes = new
                            {
                                @class = "editor-field",
                       @data_val = "true",
                                @required = "required"
                            }
                        })
                        @Html.HiddenFor(model => model.country)
                        @Html.ValidationMessageFor(model => model.country)
                    </div>
                </div>
            </div>
            <div style="padding:10px;">
                <input type="submit" class="btn" onclick="CheckData();" value="Next" />
            </div>
        </fieldset>
    }
</body>
</html>